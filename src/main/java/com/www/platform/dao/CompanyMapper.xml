<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.www.platform.dao.CompanyMapper">
  <resultMap id="BaseResultMap" type="com.www.platform.entity.Company">
    <id column="comid" jdbcType="INTEGER" property="comid" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="comaddr" jdbcType="VARCHAR" property="comaddr" />
    <result column="comemail" jdbcType="VARCHAR" property="comemail" />
    <result column="comname" jdbcType="VARCHAR" property="comname" />
    <result column="comcontact" jdbcType="VARCHAR" property="comcontact" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="typeId" jdbcType="INTEGER" property="typeid" />
    <result column="modtime" jdbcType="TIMESTAMP" property="modtime" />
    <result column="statusId" jdbcType="INTEGER" property="statusid" />
      <collection property="logs" resultMap="com.www.platform.dao.LogMapper.BaseResultMap"></collection>
      <collection property="items" resultMap="com.www.platform.dao.ItemMapper.BaseResultMap"></collection>
  </resultMap>
  <sql id="Base_Column_List">
    comid, pid, comaddr, comemail, comname, comcontact, createtime, typeId, modtime, 
    statusId
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from company
    where comid = #{comid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from company
    where comid = #{comid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.www.platform.entity.Company">
    insert into company (comid, pid, comaddr, 
      comemail, comname, comcontact, 
      createtime, typeId, modtime, 
      statusId)
    values (#{comid,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{comaddr,jdbcType=VARCHAR}, 
      #{comemail,jdbcType=VARCHAR}, #{comname,jdbcType=VARCHAR}, #{comcontact,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{typeid,jdbcType=INTEGER}, #{modtime,jdbcType=TIMESTAMP}, 
      #{statusid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.www.platform.entity.Company">
    <selectKey keyProperty='comid' resultType='int' order='AFTER'  >
      select LAST_INSERT_ID();
    </selectKey>
    insert into company
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="comid != null">
        comid,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="comaddr != null">
        comaddr,
      </if>
      <if test="comemail != null">
        comemail,
      </if>
      <if test="comname != null">
        comname,
      </if>
      <if test="comcontact != null">
        comcontact,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="typeid != null">
        typeId,
      </if>
      <if test="modtime != null">
        modtime,
      </if>
      <if test="statusid != null">
        statusId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="comid != null">
        #{comid,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="comaddr != null">
        #{comaddr,jdbcType=VARCHAR},
      </if>
      <if test="comemail != null">
        #{comemail,jdbcType=VARCHAR},
      </if>
      <if test="comname != null">
        #{comname,jdbcType=VARCHAR},
      </if>
      <if test="comcontact != null">
        #{comcontact,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="typeid != null">
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="modtime != null">
        #{modtime,jdbcType=TIMESTAMP},
      </if>
      <if test="statusid != null">
        #{statusid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.www.platform.entity.Company">
    update company
    <set>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="comaddr != null">
        comaddr = #{comaddr,jdbcType=VARCHAR},
      </if>
      <if test="comemail != null">
        comemail = #{comemail,jdbcType=VARCHAR},
      </if>
      <if test="comname != null">
        comname = #{comname,jdbcType=VARCHAR},
      </if>
      <if test="comcontact != null">
        comcontact = #{comcontact,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="typeid != null">
        typeId = #{typeid,jdbcType=INTEGER},
      </if>
      <if test="modtime != null">
        modtime = #{modtime,jdbcType=TIMESTAMP},
      </if>
      <if test="statusid != null">
        statusId = #{statusid,jdbcType=INTEGER},
      </if>
    </set>
    where comid = #{comid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.www.platform.entity.Company">
    update company
    set pid = #{pid,jdbcType=INTEGER},
      comaddr = #{comaddr,jdbcType=VARCHAR},
      comemail = #{comemail,jdbcType=VARCHAR},
      comname = #{comname,jdbcType=VARCHAR},
      comcontact = #{comcontact,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      typeId = #{typeid,jdbcType=INTEGER},
      modtime = #{modtime,jdbcType=TIMESTAMP},
      statusId = #{statusid,jdbcType=INTEGER}
    where comid = #{comid,jdbcType=INTEGER}
  </update>

    <select id="selectSelective" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from company
        where 1=1
        <if test="typeId != null" >
            AND typeId = #{typeId}
        </if>
        <if test="comaddr != null and !comaddr.trim().equals('')">
            AND comaddr = #{comaddr}
        </if>
        <if test="comemail != null and !comemail.trim().equals('')">
            AND comemail = #{comemail}
        </if>
        <if test="comname != null and !comname.trim().equals('')">
            AND comname = #{comname}
        </if>
        <if test="comcontact != null and !comcontact.trim().equals('')">
            AND comcontact = #{comcontact}
        </if>
    </select>

    <select id="queryCompanyList" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT
        com.comid, com.pid, comaddr, comemail, comname, comcontact, createtime, typeId, modtime, statusId,
        iid, i.pid, pTypeid, pStatus, i.uname as iname, time, remark,
        lid, l.uname, module, method, ip, otime, responseTime, result
        FROM company com  LEFT JOIN item i ON com.comid=i.comid LEFT JOIN log l ON com.comid=l.comid
        <where>
            <if test= "typeId != null">
                AND com.typeId = #{typeId}
            </if>
            <if test= "searchType.equals('comid')">
                AND com.comid = #{searchWord}
            </if>
            <if test= "searchType.equals('comname')">
                AND com.comname LIKE '%${searchWord}%'
            </if>
            <if test= "searchType.equals('comaddr')">
                AND com.comaddr LIKE '%${searchWord}%'
            </if>
            <if test= "searchType.equals('comemail')">
                AND com.comemail LIKE '%${searchWord}%'
            </if>
            <if test= "searchType.equals('comcontact')">
                AND com.comcontact LIKE '%${searchWord}%'
            </if>
        </where>
        ORDER BY com.comid
    </select>

    <delete id="deleteCompany" parameterType="int">
        DELETE com,i
        FROM company as com
        LEFT JOIN item as i on com.comid=i.comid
        WHERE com.comid in
        <foreach collection="array" item="comid" open="(" separator="," close=")">
            #{comid}
        </foreach>
    </delete>

    <update id="updateCompany" parameterType="java.util.Map">
        UPDATE company
        SET
        pid = #{pid},
        comaddr = #{comaddr},
        comemail = #{comemail},
        comname = #{comname},
        comcontact = #{comcontact},
        typeId = #{typeId},
        modtime = #{modtime}
        WHERE comid = #{comid}
    </update>

    <insert id="insertCompany" parameterType="java.util.Map">
        insert into company
        (comid,pid,comaddr,comemail, comname, comcontact,createtime, typeId, modtime,statusId)
        values (#{comid,jdbcType=INTEGER},#{pid},#{comaddr},#{comemail}, #{comname}, #{comcontact},#{createtime}, #{typeId}, #{modtime},0)
    </insert>
</mapper>