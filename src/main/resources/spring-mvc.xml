<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context">

    <context:component-scan base-package="com.www.platform">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>

    <!--用于解析@RequestBody-->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean"/>
    <!--&lt;!&ndash;视图解析器&ndash;&gt;-->
    <!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
        <!--<property name="prefix" value="/WEB-INF/view/"></property>-->
        <!--<property name="suffix" value=".html"></property>-->
    <!--</bean>-->

    <!--部分解析器，用于解析文件上传是的context-type为multipart/form-data;
    boundary=...的情况-->
    <!--<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
        <!--<property name="maxUploadSize" value="5242880"></property>-->
    <!--</bean>-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--  10*1024*1024即10M  -->
        <property name="maxUploadSize" value="10485760" />
        <!-- resolveLazily属性启用是为了推迟文件解析，以便在UploadAction 中捕获文件大小异常   -->
        <property name="resolveLazily" value="true" />
        <property name="uploadTempDir" value="src/main/webapp/uploadFiles" />
    </bean>
    <mvc:annotation-driven conversion-service="conversionService">
        <mvc:message-converters register-defaults="false">
            <!--<bean id="fastJsonHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">-->
                <!--<property name="supportedMediaTypes">-->
                    <!--<list>-->
                        <!--&lt;!&ndash; 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 &ndash;&gt;-->
                        <!--<value>text/html;charset=UTF-8</value>-->
                        <!--<value>application/json;charset=UTF-8</value>-->
                    <!--</list>-->
                <!--</property>-->
            <!--</bean>-->
            <!--<bean id="messageConverter" class="org.springframework.http.converter.ResourceHttpMessageConverter">-->
                <!--<property name="supportedMediaTypes">-->
                    <!--<list>-->
                        <!--&lt;!&ndash; 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 &ndash;&gt;-->
                        <!--<value>text/html;charset=UTF-8</value>-->
                        <!--<value>application/json;charset=UTF-8</value>-->
                    <!--</list>-->
                <!--</property>-->
            <!--</bean>-->
            <bean id="fastJsonConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
                        <value>text/html;charset=UTF-8</value>
                        <!--<value>application/json;charset=UTF-8</value>-->
                    </list>
                </property>
                <property name="objectMapper">
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="dateFormat">
                            <bean class="java.text.SimpleDateFormat">
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
                            </bean>
                        </property>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!--用于解决静态资源的映射处理问题静态资源的处理servlet（三种方式）-->
    <!--第一种静态资源映射-->
    <mvc:default-servlet-handler/>
    <!--第二种静态资源映射-->
    <!--<servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.jpg</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.js</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.css</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.html</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.ico</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.png</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.gif</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.ttf</url-pattern>
    </servlet-mapping>-->

    <!--第三种静态资源映射-->
    <!--<mvc:resources mapping="/static/**" location="/WEB-INF/static/"/>-->
    <!-- 启动AspectJ支持   只对扫描过的bean有效-->
    <aop:aspectj-autoproxy/>
    <bean id="logAopAction" class="com.www.platform.filter.OperateFilter"/>
</beans>